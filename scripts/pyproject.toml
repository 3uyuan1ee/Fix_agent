[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aidefect"
version = "1.0.0"
description = "基于AI Agent的软件项目缺陷自主检测与修复系统"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "AIDefectDetector Team", email = "contact@aidefect.com"},
]
maintainers = [
    {name = "AIDefectDetector Team", email = "contact@aidefect.com"},
]
keywords = ["ai", "code analysis", "defect detection", "repair", "static analysis", "deep analysis"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Debuggers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "pyyaml>=6.0",
    "loguru>=0.7.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "anthropic>=0.3.0",
    "openai>=1.0.0",
    "zhipuai>=1.0.0",
    "pydantic>=1.8.0",
    "requests>=2.25.0",
    "aiohttp>=3.8.0",
    "jinja2>=3.0.0",
    "python-multipart>=0.0.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.900",
    "pre-commit>=2.20.0",
]
web = [
    "flask>=2.0.0",
    "bootstrap-flask>=2.0.0",
    "werkzeug>=2.0.0",
]
all = [
    "aidefect[dev,web]",
]

[project.urls]
Homepage = "https://github.com/your-repo/AIDefectDetector"
Documentation = "https://github.com/your-repo/AIDefectDetector/docs"
Repository = "https://github.com/your-repo/AIDefectDetector.git"
"Bug Tracker" = "https://github.com/your-repo/AIDefectDetector/issues"
Changelog = "https://github.com/your-repo/AIDefectDetector/CHANGELOG.md"

[project.scripts]
aidefect = "main:main"
aidefect-web = "main:web_main_wrapper"

[tool.setuptools]
packages = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.txt", "*.md"]
"web" = ["templates/*.html", "static/css/*.css", "static/js/*.js"]
"config" = ["*.yaml", "*.yml"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "anthropic.*",
    "openai.*",
    "zhipuai.*",
    "loguru.*",
    "rich.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]