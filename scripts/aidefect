#!/usr/bin/env python3
"""
AIDefectDetector - AI驱动的代码缺陷检测与修复系统
全局可执行命令脚本
"""

import sys
import os
from pathlib import Path

def find_project_root():
    """查找项目根目录"""
    current = Path(__file__).resolve()

    # 如果是符号链接，获取真实路径
    if current.is_symlink():
        current = current.resolve()

    # 查找项目根目录标志
    while current != current.parent:
        if (current / "main.py").exists() or (current / "src" / "interfaces" / "web.py").exists():
            return current
        current = current.parent

    # 如果没找到，假设当前脚本所在目录就是项目根目录
    return Path(__file__).parent

def setup_python_path():
    """设置Python路径"""
    project_root = find_project_root()
    src_path = project_root / "src"

    if src_path.exists():
        sys.path.insert(0, str(src_path))

    return project_root

def main():
    """主函数"""
    try:
        # 设置Python路径和项目根目录
        project_root = setup_python_path()

        # 切换到项目根目录
        os.chdir(project_root)

        # 导入并运行主程序
        from main import cli_main

        # 调用主程序
        sys.exit(cli_main())

    except ImportError as e:
        print(f"❌ 导入错误: {e}")
        print("请确保项目依赖已正确安装:")
        print("pip install -r requirements.txt")
        return 1
    except Exception as e:
        print(f"❌ 运行错误: {e}")
        return 1

if __name__ == "__main__":
    sys.exit(main())